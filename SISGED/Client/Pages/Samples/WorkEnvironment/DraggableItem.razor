@using Newtonsoft.Json;
<style>
    .registro {
        color: #cca300;
        font-weight: bold;
        margin-left:7px;
    }
    .mat-info-c {
        color: #3333ff !important;
        border: 1px solid #3333ff !important;
        border-radius: 15px !important;
        font-size: 13px !important;
        transition: all 300ms !important;
    }
    .field-container {
        padding: 5px;
    }
</style>
<li draggable="true" class="li-tool @classname" @ondragstart="@(() => HandleDragStart(herramienta))">
    <div class="tool-container">
        <MatIcon>@MatIconNames.Assistant</MatIcon>
        <div class="tool-sub-container">
            <p class="tool-name">@herramienta.nombre</p>
            <p class="tool-description">@herramienta.descripcion</p>
            @if (herramienta.cliente == null)
            {

            }
            else
            {
                <p class="tool-client-name">@herramienta.cliente.nombre  -  @herramienta.cliente.numerodocumento </p>
                ExpedienteBandejaDTO doc = (ExpedienteBandejaDTO)herramienta.valor;
                if ((herramienta.itemstatus.Equals("registrado") || herramienta.itemstatus.Equals("evaluado")) && herramienta.originPlace.Equals("inputs"))
                {
                    ExpedienteBandejaDTO documento = (ExpedienteBandejaDTO)herramienta.valor;
                    <p class="registro">Documento Registrado: @documento.documento.tipo</p>
                }
                if (herramienta.itemstatus.Equals("escogido") && herramienta.originPlace.Equals("inputs"))
                {
                    EscrituraPublicaRDTO escrituraPublica = herramienta.escriturapublica;
                    <p class="registro">Escritura Pública escogido: @escrituraPublica.titulo</p>
                }
                if ((herramienta.itemstatus.Equals("InSpace") || herramienta.itemstatus.Equals("escogido") || herramienta.itemstatus.Equals("registrado") || herramienta.itemstatus.Equals("evaluado")) && herramienta.originPlace.Equals("inputs"))
                {
                    ExpedienteBandejaDTO documento = (ExpedienteBandejaDTO)herramienta.valor;
                    <div class="field-container">
                        <MatButton Class="mat-info-c" @onclick="@(()=>workSpace.openDialog())">Visualizar</MatButton>
                        @if (herramienta.itemstatus.Equals("evaluado"))
                        {
                            <MatButton Class="mat-info-c" @onclick="@(() => workSpace.openDialogEva())">Visualizar Evaluacion</MatButton>
                        }
                    </div>
                }

                if (workSpace.escrituraPublicaseleccionada != null)
                {
                    if (doc.documento.tipo == "OficioDesignacionNotario" || doc.documento.tipo == "ConclusionFirma" ||
                        doc.documento.tipo == "OficioBPN" || doc.documento.tipo == "ResultadoBPN")
                    {
                        <div class="field-container">
                            <a class="mat-info-c" style="padding:10px" @onclick="@(() => mostrarEscrituraPublica())"
                               href="@workSpace.escrituraPublicaseleccionada.url" target="_blank">Visualizar Escritura Publica</a>
                        </div>
                    }
                }
                /*if ()
                {

                }*/
            }
        </div>
    </div>
</li>

@code {
    [CascadingParameter] public WorkEnvironment workSpace { get; set; }
    [Parameter] public Item herramienta { get; set; }

    public string classname = "li-drag-style";

    private void HandleDragStart(Item tool)
    {
        workSpace.currentItemDragged = tool;
    }

    public async Task mostrarEscrituraPublica()
    {
        Console.WriteLine("Visualizando la escritura publica");
    }
}
