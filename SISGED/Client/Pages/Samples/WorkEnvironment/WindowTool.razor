@using SISGED.Client.Pages.Samples.WorkEnvironment.WindowItemContent
<style>
    .window {
        display:flex;
        flex-direction:row;
        align-items:center;
        justify-content:center;
        background-color: #1a1a1a;
        border: none;
        text-align: center;
        color: black;
        width: inherit;
        height: 99%;
        line-height:99%;
        padding: 10px;
    }
</style>
<div class="window">

    @if (ChildContent != null)
    {
        @ChildContent
    }
    else
    {
        <h4 style="color:#808080">Arrastre una herramienta al espacio de trabajo</h4>
    }

</div>


@code {
    //[CascadingParameter] public WorkEnvironment workSpace { get; set; }
    [Parameter] public Tool itemArrastrado { get; set; }
    public RenderFragment ChildContent = null;
    [CascadingParameter] WorkEnvironment workspace { get; set; }
    protected override void OnInitialized()
    {

    }
    protected override void OnParametersSet()
    {
        Console.WriteLine("WINDOW TOOL: OnParameterSet()");
        if (itemArrastrado != null)
        {
            Console.WriteLine("valor encontrado y actualizando");
            if(itemArrastrado.nombre == "Busqueda")
            {
                ChildContent = @<ContenidoPrueba></ContenidoPrueba>;
            }
            else
            {
                ChildContent = @<ContenidoPrueba2></ContenidoPrueba2>;
            }
        }
        else
        {
            ChildContent = null;
        }
        StateHasChanged();
    }

    public object GetInstanceFromString(string classname)
    {
        Type type = Type.GetType(classname);
        return Activator.CreateInstance(type);
    }
}
