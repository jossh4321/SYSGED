
<style>
    .tool-container {
        display: flex;
        padding: 6px 5px 6px 15px;
        color: white;
        text-align: left;
        justify-content: left;
        flex-direction: row;
        align-items: center;
    }
    .tool-name {
        font-size: 16px;
        font-family: sans-serif;
    }
    .li-tool{
        list-style:none;
    }
    .li-drag-style {
        border: 2px solid #808080 !important;
        margin: 6px;
        border-radius: 15px;
        background-color: #404040 !important;
        transition: 300ms all;
    }
        .li-drag-style:hover {
            transform: scale(1.05);
            border: 2px solid #0066ff !important;
        }
        .li-drag-style:hover .tool-name, .li-drag-style:hover i.material-icons {
            transform:scale(1);
            color: #0066ff !important;
        }
    .tool-name {
        display: block;
        margin: 0px 0px 0px 7px;
        color: #b3b3b3;
    }
    i.material-icons{
        color: #b3b3b3 !important;
    }
    

</style>
<li draggable="true" class="li-tool @classname" @ondragstart="@(() => HandleDragStart(herramienta))">
    <div class="tool-container">
       <MatIcon>@MatIconNames.Assistant</MatIcon>
        <p class="tool-name">@herramienta.nombre</p>
    </div>
</li>

@code {
    [CascadingParameter] public WorkEnvironment workSpace { get; set; }
    [Parameter] public Tool herramienta { get; set; }
    public string classname = "li-drag-style";

    private void HandleDragStart(Tool tool)
    {
        workSpace.currentToolDragged = tool;
    }
}
