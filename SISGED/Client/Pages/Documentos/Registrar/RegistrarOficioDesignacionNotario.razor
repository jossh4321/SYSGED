@inject IRepository repository
@inject ISwalFireMessage swalfire
<style>
    .div-form {
        background-color: #a6a6a6;
        flex-basis: 100%;
        border-radius: 5px 5px 0px 0px;
        width: 100%;
    }
    .field-container {
        display: block;
        padding: 10px;
    }
    .text-field-style {
        display: block !important;
    }
    /*validacion*/
    .validation-message {
        display: inline;
    }

    div.invalid .correcto {
        display: none;
    }



    div.valid .incorrecto,
    div.valid:not(.modified) .correcto {
        display: none;
    }
    .correcto {
        color: green !important;
        font-family: sans-serif;
        font-size: 15px;
        display: flex;
        height: 18px;
    }

    .incorrecto {
        color: red !important;
        font-family: sans-serif;
        font-size: 15px;
        display: flex;
        height: 18px;
    }

    i.val-icon {
        font-size: 20px;
    }
    .good-msg, div.correcto i.good-icon {
        color: green !important;
    }
    div.incorrecto i.bad-icon{
        color:red !important;
    }
</style>

<div class="div-form">
    <EditForm EditContext="@_editContext" Context="CurrentEditContext"
              OnValidSubmit="handleValidSubmit" OnInvalidSubmit="handleInvalidSubmit">
        <FluentValidator></FluentValidator>
        <MatTabGroup>
            <MatTab Label="Datos Generales">
                <div class="field-container input-group-2 @CurrentEditContext.FieldCssClass( () => oficiodesignacion.contenido.titulo)">
                    <MatTextField @bind-Value="@oficiodesignacion.contenido.titulo" Class="text-field-style"
                                  Label="Titulo del Oficio" @oninput='@(e => KeyUp(e,"titulo",oficiodesignacion.contenido))'></MatTextField>
                    <div class="incorrecto">
                        <MatIcon Icon="@MatIconNames.Error" Class="val-icon bad-icon"></MatIcon>
                        <ValidationMessage For="@(() => oficiodesignacion.contenido.titulo)" />
                    </div>
                    <div class="correcto">
                        <MatIcon Icon="@MatIconNames.Check" Class="val-icon good-icon"></MatIcon>
                        <span class="good-msg">Correcto</span>
                    </div>
                </div>
                <div class="field-container input-group-2 @CurrentEditContext.FieldCssClass( () => oficiodesignacion.contenido.descripcion)">
                    <MatTextField @bind-Value="@oficiodesignacion.contenido.descripcion" Class="text-field-style"
                                  Label="Descripcion del Oficio" @oninput='@(e => KeyUp(e,"descripcion",oficiodesignacion.contenido))'></MatTextField>
                    <div class="incorrecto">
                        <MatIcon Icon="@MatIconNames.Error" Class="val-icon bad-icon"></MatIcon>
                        <ValidationMessage For="@(() => oficiodesignacion.contenido.descripcion)" />
                    </div>
                    <div class="correcto">
                        <MatIcon Icon="@MatIconNames.Check" Class="val-icon good-icon"></MatIcon>
                        <span class="good-msg">Correcto</span>
                    </div>
                </div>
                <div class="field-container input-group-2 @CurrentEditContext.FieldCssClass( () => oficiodesignacion.contenido.lugaroficionotarial)">
                    <MatTextField @bind-Value="@oficiodesignacion.contenido.lugaroficionotarial" Class="text-field-style"
                                  Label="Dir. Oficio Notarial" @oninput='@(e => KeyUp(e,"lugaroficionotarial",oficiodesignacion.contenido))'></MatTextField>
                    <div class="incorrecto">
                        <MatIcon Icon="@MatIconNames.Error" Class="val-icon bad-icon"></MatIcon>
                        <ValidationMessage For="@(() => oficiodesignacion.contenido.lugaroficionotarial)" />
                    </div>
                    <div class="correcto">
                        <MatIcon Icon="@MatIconNames.Check" Class="val-icon good-icon"></MatIcon>
                        <span class="good-msg">Correcto</span>
                    </div>
                </div>
                <div class="field-container">
                    <MatButton type="submit"
                               Icon="@MatBlazor.MatIconNames.Check_circle_outline"
                               Class="button-input-style mat-success-c sub-but">Registrar Ahora</MatButton>
                </div>
            </MatTab>
        </MatTabGroup>
    </EditForm>

</div>

@code {
    private OficioDesignacionNotario oficiodesignacion = new OficioDesignacionNotario();
    private EditContext _editContext;
    protected override void OnInitialized()
    {
        _editContext = new EditContext(oficiodesignacion);
    }

    void KeyUp(ChangeEventArgs e, string memberName, object val)
    {
        //var property = usuario2.GetType().GetProperty(memberName);
        var property = val.GetType().GetProperty(memberName); //GetProperty(memberName, usuario2);
        property.SetValue(val, e.Value.ToString());
        Console.WriteLine("Aqui Todo Bien: " + e.Value.ToString());
        var fi = new FieldIdentifier(val, memberName);
        _editContext.NotifyFieldChanged(fi);
    }

    public void handleValidSubmit()
    {
        swalfire.successMessage("Oficio de Designacion Registrada Correctamente");
        Console.WriteLine("Todo Bien");
    }

    public void handleInvalidSubmit()
    {
        swalfire.errorMessage("Por favor, Verifique los Datos Ingresados");
        Console.WriteLine("Algo Mal");
    }

}
