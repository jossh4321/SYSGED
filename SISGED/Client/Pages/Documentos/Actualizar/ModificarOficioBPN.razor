@inject IRepository repository
@inject ISwalFireMessage swalfire
@using SISGED.Client.Pages.Samples.WorkEnvironment
<style>
    .div-form {
        background-color: #a6a6a6;
        flex-basis: 100%;
        border-radius: 5px 5px 0px 0px;
        width: 100%;
    }

    .field-container {
        display: block;
        padding: 10px;
    }

    .text-field-style {
        display: block !important;
    }
    /*validacion*/
    .validation-message {
        display: inline;
    }

    div.invalid .correcto {
        display: none;
    }

    div.valid .incorrecto,
    div.valid:not(.modified) .correcto {
        display: none;
    }

    .correcto {
        color: green !important;
        font-family: sans-serif;
        font-size: 15px;
        display: flex;
        height: 18px;
    }

    .incorrecto {
        color: red !important;
        font-family: sans-serif;
        font-size: 15px;
        display: flex;
        height: 18px;
    }

    i.val-icon {
        font-size: 20px;
    }

    .good-msg, div.correcto i.good-icon {
        color: green !important;
    }

    div.incorrecto i.bad-icon {
        color: red !important;
    }

    .modal-info-solicitudBPN {
        display: flex;
        flex-direction: column;
        /*height: 700px;*/
        width: 500px;
        background-color: #808080;
    }

    .div-form.mat-tab-group {
        max-width: 500px;
    }

    .otorgantes {
        border: 1px solid #ccc;
        background: #f2f2f2;
        display: flex;
        margin: 7px 10px;
        align-items: center;
        flex-direction: column;
        border-radius: 5px 5px 0px 0px;
        border-bottom: 1px solid black;
    }

    .title-ot {
        font-size: 16px;
        margin-bottom: 0px;
        margin-top: 5px;
        color: #595959;
    }
    
</style>
<div class="div-form">
    @if (firstLoad == true)
    {
    <div class="loader-block">
        <div class="spinner-border spin" style="        width: 7rem;
        height: 7rem;
        color: #ccc" role="status">
            <span class="sr-only">Loading...</span>
        </div>

        <span style="color:white">CARGANDO...</span>
    </div>
    }
    else
    {
        <EditForm EditContext="@_editContext" Context="CurrentEditContext"
                  OnValidSubmit="handleValidSubmit" OnInvalidSubmit="handleInvalidSubmit">
            <FluentValidator></FluentValidator>
            <MatTabGroup>
                <MatTab Label="Informacion Descriptiva">

                    <div class="field-container">
                        <MatButton type="button" Icon="@MatBlazor.MatIconNames.Info"
                                   @onclick="@openDialog"
                                   Class="button-input-style mat-info-c sub-but">Informacion de Solicitud</MatButton>
                    </div>

                    <div class="field-container input-group-2 @CurrentEditContext.FieldCssClass(() => documento.contenidoDTO.titulo)">
                        <MatTextField @bind-Value="@documento.contenidoDTO.titulo" Class="text-field-style" Label="Titulo de documento"
                                      @oninput='@(e => KeyUp(e, "titulo", documento.contenidoDTO))'></MatTextField>

                        <div class="incorrecto">
                            <MatIcon Icon="@MatIconNames.Error" Class="val-icon bad-icon"></MatIcon>
                            <ValidationMessage For="@(() => documento.contenidoDTO.titulo)" />
                        </div>
                        <div class="correcto">
                            <MatIcon Icon="@MatIconNames.Check" Class="val-icon good-icon"></MatIcon>
                            <span class="good-msg">Correcto</span>
                        </div>
                    </div>

                    <div class="field-container input-group-2 @CurrentEditContext.FieldCssClass(() => documento.contenidoDTO.descripcion)">
                        <MatTextField @bind-Value="@documento.contenidoDTO.descripcion" Class="text-field-style" Label="Descripcion del documento"
                                      @oninput='@(e => KeyUp(e, "descripcion", documento.contenidoDTO))'></MatTextField>

                        <div class="incorrecto">
                            <MatIcon Icon="@MatIconNames.Error" Class="val-icon bad-icon"></MatIcon>
                            <ValidationMessage For="@(() => documento.contenidoDTO.descripcion)" />
                        </div>
                        <div class="correcto">
                            <MatIcon Icon="@MatIconNames.Check" Class="val-icon good-icon"></MatIcon>
                            <span class="good-msg">Correcto</span>
                        </div>
                    </div>

                    <div class="field-container">
                        <MatButton type="submit"
                                   Disabled="@loadprocess"
                                   Icon="@MatBlazor.MatIconNames.Edit"
                                   Class="button-input-style mat-warning-c sub-but">Modificar Ahora</MatButton>
                    </div>
                </MatTab>
            </MatTabGroup>
        </EditForm>

        <MatDialog @bind-IsOpen="@abrirDialogo">
            <div class="modal-info-solicitudBPN">
                <MatTabGroup>
                    <MatTab Label="Solicitud">
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.actojuridico" ReadOnly="true" Class="text-field-style" Label="Acto Juridico"></MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.direccionoficio" ReadOnly="true" Class="text-field-style" Label="Direccion de Oficio"></MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.tipoprotocolo" ReadOnly="true" Class="text-field-style" Label="Tipo de Protocolo"></MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.direccionoficio" ReadOnly="true" Class="text-field-style" Label="Direccion de Oficio"></MatTextField>
                        </div>
                        <div class="otorgantes">
                            <p class="title-ot">OTORGANTES REGISTRADOS</p>

                            <MatChipSet>
                                @foreach (string otorgante in documento.contenidoDTO.otorgantes)
                                {
                                    <MatChip Label="@otorgante" LeadingIcon="@MatIconNames.Supervised_user_circle"></MatChip>
                                }
                            </MatChipSet>

                        </div>
                        <div class="field-container input-group-2">
                            <MatDatePicker @bind-Value="@documento.contenidoDTO.fecharealizacion" Format="MM/dd/yy H:mm:ss" Class="text-field-style" Label="Fecha de Realizacion" ReadOnly="true"></MatDatePicker>
                        </div>
                    </MatTab>
                    <MatTab Label="Solicitante">
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idcliente.datos.nombre" ReadOnly="true" Class="text-field-style" Label="Nombre del solicitante">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idcliente.datos.apellido" ReadOnly="true" Class="text-field-style" Label="Apellido del solicitante">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idcliente.datos.tipodocumento" ReadOnly="true" Class="text-field-style" Label="Tipo de Documento">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idcliente.datos.numerodocumento" ReadOnly="true" Class="text-field-style" Label="Numero de Documento">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idcliente.datos.email" ReadOnly="true" Class="text-field-style" Label="Correo Electronico">
                            </MatTextField>
                        </div>
                    </MatTab>
                    <MatTab Label="Notario">
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idnotario.nombre" ReadOnly="true" Class="text-field-style" Label="Nombre del Notario">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idnotario.apellido" ReadOnly="true" Class="text-field-style" Label="Apellido del Notario">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idnotario.dni" ReadOnly="true" Class="text-field-style" Label="DNI">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idnotario.colegiatura" ReadOnly="true" Class="text-field-style" Label="Codigo de Colegiatura">
                            </MatTextField>
                        </div>
                        <div class="field-container input-group-2">
                            <MatTextField @bind-Value="@documento.contenidoDTO.idnotario.email" ReadOnly="true" Class="text-field-style" Label="Correo Electronico">
                            </MatTextField>
                        </div>
                    </MatTab>
                </MatTabGroup>
            </div>
        </MatDialog>
    }

</div>
@code {
    [CascadingParameter] WorkEnvironment workspace { get; set; }
    [CascadingParameter(Name = "SesionUsuario")] protected Sesion sesion { get; set; }
    private bool loadprocess = false;
    public bool abrirDialogo = false;
    public void openDialog() { abrirDialogo = true; }
    public void closeDialog() { abrirDialogo = false; }
    private bool firstLoad = true;

    public SolicitudBPNDTO docSolicitudBPNDTO = new SolicitudBPNDTO()
    {
        tipo = "SolicitudBPN",
        estado = "Pendiente",
        historialcontenido = new List<ContenidoVersion>()
{
            new ContenidoVersion() { version = 1, url = "www.cnl/solicitud_BPN/1", fechamodificacion = new DateTime() }
        },
        historialproceso = new List<Proceso>(),
        contenidoDTO = new ContenidoSolicitudBPNDTO()
        {
            idcliente = new Usuario()
            {
                id = "5eaba912d1768c4570dc1a80",
                tipo = "Cliente",
                usuario = "user1",
                clave = "pass1",
                datos = new Datos()
                {
                    nombre = "Juan Carlos",
                    apellido = "Pillaca",
                    tipodocumento = "D.N.I.",
                    numerodocumento = "12345678",
                    email = "jcPillaca@urp.edu.pe"
                }
            },
            direccionoficio = "av. surco 123",
            idnotario = new Notario()
            {
                id = "5ecb15b38e511a1d5cca29c4",
                nombre = "Fernando Jose",
                apellido = "Ezzpinoza Paredes",
                dni = "4321",
                colegiatura = "4H5H4K6K6V5J233O6HU6U676",
                email = "fernandoparedes@cnl.gob.pe"
            },
            actojuridico = "Mancomunacion de vienes por casamiento civil",
            tipoprotocolo = "minuta",
            otorgantes = new List<string>() { "jose olaya", "francisco bolognesi", "alejandro toledo" },
            fecharealizacion = DateTime.Now
        }
    };

    private OficioBPNDTO documento = new OficioBPNDTO();
    private EditContext _editContext;
    protected override async Task  OnInitializedAsync()
    {
        firstLoad = true;
        _editContext = new EditContext(documento);
        List<OficioBPNDTO> listaexpediente = new List<OficioBPNDTO>();
        var httpResponse = await repository.Get<OficioBPNDTO>($"api/documentos/documentoobpn?iddoc={workspace.expedienteseleccionado.documento.id}");
        if (!httpResponse.Error)
        {
            documento = (OficioBPNDTO)httpResponse.Response;
            _editContext = new EditContext(documento);
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Ocurrio un Error");
        }
        firstLoad = false;
    }

    void KeyUp(ChangeEventArgs e, string memberName, object val)
    {
        var property = val.GetType().GetProperty(memberName);
        property.SetValue(val, e.Value.ToString());
        var fi = new FieldIdentifier(val, memberName);
        _editContext.NotifyFieldChanged(fi);
    }

    public async Task handleValidSubmit()
    {
        loadprocess = true;
        documento.contenidoDTO.idcliente = docSolicitudBPNDTO.contenidoDTO.idcliente;
        documento.contenidoDTO.direccionoficio = docSolicitudBPNDTO.contenidoDTO.direccionoficio;
        documento.contenidoDTO.idnotario = docSolicitudBPNDTO.contenidoDTO.idnotario;
        documento.contenidoDTO.actojuridico = docSolicitudBPNDTO.contenidoDTO.actojuridico;
        documento.contenidoDTO.tipoprotocolo = docSolicitudBPNDTO.contenidoDTO.tipoprotocolo;
        documento.contenidoDTO.otorgantes = docSolicitudBPNDTO.contenidoDTO.otorgantes;
        documento.contenidoDTO.fecharealizacion = DateTime.Now;

        ExpedienteWrapper expedienteWrapper = new ExpedienteWrapper();
        expedienteWrapper.documento = documento;
        expedienteWrapper.idexpediente = workspace.expedienteseleccionado.idexpediente;
        expedienteWrapper.idusuarioactual = sesion.usuario.id;
        expedienteWrapper.documentoentrada = workspace.expedienteseleccionado.documento.id;

        var httpResponse = await repository.Put<ExpedienteWrapper>($"api/documentos/actualizarDocumentoOficioBPN", expedienteWrapper);
        if (!httpResponse.Error)
        {
            await swalfire.successMessage("Oficio de Busqueda de Protocolo Notarial modificada Correctamente");
        }
        else
        {
            await swalfire.errorMessage("Error en el servidor");
        }
        loadprocess = false;
    }

    public void handleInvalidSubmit()
    {
        loadprocess = false;
        swalfire.errorMessage("Por favor, Verifique los Datos Ingresados");
    }
}
