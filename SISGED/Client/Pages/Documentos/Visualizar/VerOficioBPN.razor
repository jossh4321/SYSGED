@inject IRepository repository
@inject ISwalFireMessage swalfire
@using SISGED.Client.Pages.Samples.WorkEnvironment
@using Newtonsoft.Json;
<style>
    .modal-info-designacion-notario {
        display: flex;
        flex-direction: column;
        /*height: 700px;*/
        width: 500px;
        background-color: #808080;
    }

    .div-form {
        background-color: #a6a6a6;
        flex-basis: 100%;
        border-radius: 5px 5px 0px 0px;
        width: 100%;
    }

    .field-container {
        display: block;
        padding: 10px;
    }

    .text-field-style {
        display: block !important;
    }
    /*validacion*/
    .validation-message {
        display: inline;
    }

    div.invalid .correcto {
        display: none;
    }

    div.valid .incorrecto,
    div.valid:not(.modified) .correcto {
        display: none;
    }

    .correcto {
        color: green !important;
        font-family: sans-serif;
        font-size: 15px;
        display: flex;
        height: 18px;
    }

    .incorrecto {
        color: red !important;
        font-family: sans-serif;
        font-size: 15px;
        display: flex;
        height: 18px;
    }

    i.val-icon {
        font-size: 20px;
    }

    .good-msg, div.correcto i.good-icon {
        color: green !important;
    }

    div.incorrecto i.bad-icon {
        color: red !important;
    }

    .modal-info-solicitudBPN {
        display: flex;
        flex-direction: column;
        /*height: 700px;*/
        width: 500px;
        background-color: #808080;
    }

    .div-form.mat-tab-group {
        max-width: 500px;
    }

    .otorgantes {
        border: 1px solid #ccc;
        background: #f2f2f2;
        display: flex;
        margin: 7px 10px;
        align-items: center;
        flex-direction: column;
        border-radius: 5px 5px 0px 0px;
        border-bottom: 1px solid black;
    }

    .title-ot {
        font-size: 16px;
        margin-bottom: 0px;
        margin-top: 5px;
        color: #595959;
    }
</style>
<div class="div-form">
    @if (firstLoad == true)
    {
        <div class="loader-block">
            <div class="spinner-border spin" style="        width: 7rem;
        height: 7rem;
        color: #ccc" role="status">
                <span class="sr-only">Loading...</span>
            </div>

            <span style="color:white">CARGANDO...</span>
        </div>
    }
    else
    {
        <div class=".modal-info-designacion-notario">
            <MatTabGroup>
                <MatTab Label="Informacion Descriptiva">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.titulo" Class="text-field-style" ReadOnly="true" Label="Titulo de documento"></MatTextField>
                    </div>

                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.descripcion" Class="text-field-style" ReadOnly="true" Label="Descripcion del documento"></MatTextField>
                    </div>
                </MatTab>
                <MatTab Label="Solicitud">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.actojuridico" ReadOnly="true" Class="text-field-style" Label="Acto Juridico"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.direccionoficio" ReadOnly="true" Class="text-field-style" Label="Direccion de Oficio"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.tipoprotocolo" ReadOnly="true" Class="text-field-style" Label="Tipo de Protocolo"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.direccionoficio" ReadOnly="true" Class="text-field-style" Label="Direccion de Oficio"></MatTextField>
                    </div>
                    <div class="otorgantes">
                        <p class="title-ot">OTORGANTES REGISTRADOS</p>

                        <MatChipSet>
                            @foreach (string otorgante in contenido.otorgantes)
                            {
                                <MatChip Label="@otorgante" LeadingIcon="@MatIconNames.Supervised_user_circle"></MatChip>
                            }
                        </MatChipSet>

                    </div>
                    <div class="field-container input-group-2">
                        <MatDatePicker @bind-Value="@contenido.fecharealizacion" Format="MM/dd/yy H:mm:ss" Class="text-field-style" Label="Fecha de Realizacion" ReadOnly="true"></MatDatePicker>
                    </div>
                </MatTab>
                <MatTab Label="Solicitante">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.nombre" ReadOnly="true" Class="text-field-style" Label="Nombre del solicitante">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.apellido" ReadOnly="true" Class="text-field-style" Label="Apellido del solicitante">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.tipodocumento" ReadOnly="true" Class="text-field-style" Label="Tipo de Documento">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.numerodocumento" ReadOnly="true" Class="text-field-style" Label="Numero de Documento">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.email" ReadOnly="true" Class="text-field-style" Label="Correo Electronico">
                        </MatTextField>
                    </div>
                </MatTab>
                <MatTab Label="Notario">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.nombre" ReadOnly="true" Class="text-field-style" Label="Nombre del Notario">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.apellido" ReadOnly="true" Class="text-field-style" Label="Apellido del Notario">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.dni" ReadOnly="true" Class="text-field-style" Label="DNI">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.colegiatura" ReadOnly="true" Class="text-field-style" Label="Codigo de Colegiatura">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.email" ReadOnly="true" Class="text-field-style" Label="Correo Electronico">
                        </MatTextField>
                    </div>
                </MatTab>
            </MatTabGroup>

        </div>

        
    }

</div>
@code {
    private ContenidoOficioBPN contenido = new ContenidoOficioBPN();
    private bool firstLoad = true;
    private Usuario usuario;
    private Notario notario;
    [Parameter] public DocumentoDTO documento { get; set; }
    protected override async Task OnInitializedAsync()
    {
        firstLoad = true;
        contenido = JsonConvert.DeserializeObject<ContenidoOficioBPN>(documento.contenido.ToString());
        Console.WriteLine(contenido.descripcion);
        usuario = new Usuario();
        notario = new Notario();
        await getUsuario();
        await getNotario();
        StateHasChanged();
        firstLoad = false;
    }

    public async Task getUsuario()
    {
        var responseHttp = await repository.Get<Usuario>($"api/usuarios/id?id={contenido.idcliente}");
        usuario = responseHttp.Response;
    }
    public async Task getNotario()
    {
        var responseHttp = await repository.Get<Notario>($"api/notarios/id?id={contenido.idnotario}");
        notario = responseHttp.Response;
    }
}
