@inject IRepository repository
@inject ISwalFireMessage swalfire
@using Blazored.Typeahead
@using SISGED.Client.Pages.Samples.WorkEnvironment
@using Newtonsoft.Json;
<style>
    .field-container {
        display: block;
        padding: 10px;
    }

    .modal-info-designacion-notario {
        display: flex;
        flex-direction: column;
        /*height: 700px;*/
        width: 500px;
        background-color: #808080;
    }

    .text-field-style {
        display: block !important;
    }

    .mat-info-c {
        color: #3333ff !important;
        border: 1px solid #3333ff !important;
        border-radius: 15px !important;
        font-size: 13px !important;
        transition: all 300ms !important;
    }

    .otorgantes {
        border: 1px solid #ccc;
        background: #f2f2f2;
        display: flex;
        margin: 7px 10px;
        align-items: center;
        flex-direction: column;
        border-radius: 5px 5px 0px 0px;
        border-bottom: 1px solid black;
    }

    .title-ot {
        font-size: 16px;
        margin-bottom: 0px;
        margin-top: 5px;
        color: #595959;
    }
</style>
<div class="div-form">
    @if (firstLoad == true)
    {
        <div class="loader-block">
            <div class="spinner-border spin" style="        width: 7rem;
        height: 7rem;
        color: #ccc" role="status">
                <span class="sr-only">Loading...</span>
            </div>

            <span style="color:white">CARGANDO...</span>
        </div>
    }
    else
    {
        <div class=".modal-info-designacion-notario">
            <MatTabGroup>
                <MatTab Label="Escritura Publica">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@escriturapublica.titulo" ReadOnly="true" Class="text-field-style" Label="Titulo"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@escriturapublica.direccionoficio" ReadOnly="true" Class="text-field-style" Label="Direccion de Oficio Notarial"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatDatePicker @bind-Value="@escriturapublica.fechaescriturapublica" Format="MM/dd/yy H:mm:ss" Class="text-field-style" Label="Fecha de Realizacion" ReadOnly="true"></MatDatePicker>
                    </div>
                    <div class="otorgantes">
                        <p class="title-ot">OTORGANTES REGISTRADOS</p>

                        <MatChipSet>
                            @foreach (ActoJuridico actjur in escriturapublica.actosjuridicos)
                            {
                                <MatChip Label="@actjur.titulo" LeadingIcon="@MatIconNames.Supervised_user_circle"></MatChip>
                            }
                        </MatChipSet>

                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.cantidadfoja" ReadOnly="true" Class="text-field-style" Label="Cantidad de Fojas"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.precio" ReadOnly="true" Class="text-field-style" Label="Precio Total"></MatTextField>
                    </div>
                </MatTab>
                <MatTab Label="Notario">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.nombre" ReadOnly="true" Class="text-field-style" Label="Nombre del Notario">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.apellido" ReadOnly="true" Class="text-field-style" Label="Apellido del Notario">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.dni" ReadOnly="true" Class="text-field-style" Label="N° D.N.I.">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.email" ReadOnly="true" Class="text-field-style" Label="Correo Electronico">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.direccion" ReadOnly="true" Class="text-field-style" Label="Direccion actual">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.colegiatura" ReadOnly="true" Class="text-field-style" Label="Codigo de Colegiatura">
                        </MatTextField>
                    </div>
                </MatTab>
                <MatTab Label="Cliente">
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.nombre" ReadOnly="true" Class="text-field-style" Label="Nombres del Cliente">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.apellido" ReadOnly="true" Class="text-field-style" Label="Apellidos del Cliente">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.email" ReadOnly="true" Class="text-field-style" Label="Correo Electronico">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.direccion" ReadOnly="true" Class="text-field-style" Label="Direccion">
                        </MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@usuario.datos.fechanacimiento" ReadOnly="true" Class="text-field-style" Label="Fecha Nacimiento">
                        </MatTextField>
                    </div>
                </MatTab>
                <MatTab Label="Anexos">
                    @if (documento.urlanexo.Count > 0)
                    {
                        int OH = 1;
                        @foreach (string urlanexos in documento.urlanexo)
                        {
                            string textito = "Anexo " + OH + " de la conclusion de firma.pdf";
                            <a href="@urlanexos" download="@textito" target="_blank">Descargar Anexo @OH</a>
                            OH++;
                        }
                    }
                    else
                    {
                        <p>No hay anexos para este documento</p>
                    }
                </MatTab>
            </MatTabGroup>
        </div>
    }
</div>

@code {
    ContenidoConclusionFirma contenido = new ContenidoConclusionFirma();
    private Usuario usuario;
    private Notario notario;
    private EscrituraPublica escriturapublica;
    [Parameter] public DocumentoDTO documento { get; set; }
    private bool firstLoad = true;

    protected override async Task OnInitializedAsync()
    {
        firstLoad = true;
        contenido = JsonConvert.DeserializeObject<ContenidoConclusionFirma>(documento.contenido.ToString());
        notario = new Notario();
        usuario = new Usuario();
        escriturapublica = new EscrituraPublica();
        await getNotario();
        await getUsuario();
        await getEscrituraPublica();
        StateHasChanged();
        firstLoad = false;
    }
    private async Task getNotario()
    {
        var responseHttp = await repository.Get<Notario>($"api/notarios/id?id={contenido.idnotario}");
        notario = responseHttp.Response;
    }
    private async Task getUsuario()
    {
        var responseHttp = await repository.Get<Usuario>($"api/usuarios/id?id={contenido.idcliente}");
        usuario = responseHttp.Response;
    }
    private async Task getEscrituraPublica()
    {
        var responseHttp = await repository.Get<EscrituraPublica>($"api/escrituraspublicas/id?id={contenido.idescriturapublica}");
        escriturapublica = responseHttp.Response;
    }
}
