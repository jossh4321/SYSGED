@inject IRepository repository
@inject ISwalFireMessage swalfire
@using Blazored.Typeahead
@using SISGED.Client.Pages.Samples.WorkEnvironment
@using Newtonsoft.Json
<style>
    .field-container {
        display: block;
        padding: 10px;
    }

    .modal-info-designacion-notario {
        display: flex;
        flex-direction: column;
        width: 500px;
        background-color: #808080;
    }

    .text-field-style {
        display: block !important;
    }

    .mat-info-c {
        color: #3333ff !important;
        border: 1px solid #3333ff !important;
        border-radius: 15px !important;
        font-size: 13px !important;
        transition: all 300ms !important;
    }

    .otorgantes {
        border: 1px solid #ccc;
        background: #f2f2f2;
        display: flex;
        margin: 7px 10px;
        align-items: center;
        flex-direction: column;
        border-radius: 5px 5px 0px 0px;
        border-bottom: 1px solid black;
    }

    .title-ot {
        font-size: 16px;
        margin-bottom: 0px;
        margin-top: 5px;
        color: #595959;
    }
</style>

<div class="div-form">
    @if (firstLoad == true)
    {
        <div class="loader-block">
            <div class="spinner-border spin" style="        width: 7rem;
        height: 7rem;
        color: #ccc" role="status">
                <span class="sr-only">Loading...</span>
            </div>

            <span style="color:white">CARGANDO...</span>
        </div>
    }
    else
    {
        <div class=".modal-info-designacion-notario">
            <MatTabGroup>
                <MatTab Label="Solicitud Expediente Notario">

                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.titulo" ReadOnly="true" Class="text-field-style" Label="Titulo de Solitud"></MatTextField>
                    </div>

                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@contenido.descripcion" ReadOnly="true" Class="text-field-style" Label="Descripcion de Solicitud "></MatTextField>
                    </div>

                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.nombre" ReadOnly="true" Class="text-field-style" Label="Nombre de notario"></MatTextField>
                    </div>
                    <div class="field-container input-group-2">
                        <MatTextField @bind-Value="@notario.apellido" ReadOnly="true" Class="text-field-style" Label="Apellido de notario"></MatTextField>
                    </div>

                </MatTab>
                <MatTab Label="Anexos">
                    @if (documento.urlanexo.Count > 0)
                    {
                        int OH = 1;
                        @foreach (string urlanexos in documento.urlanexo)
                        {
                            string textito = "Anexo " + OH + " de la Solicitud Expediente Notario.pdf";
                            <a href="@urlanexos" download="@textito" target="_blank">Descargar Anexo @OH</a>
                            OH++;
                        }
                    }
                    else
                    {
                        <p>No hay anexos para este documento</p>
                    }
                </MatTab>

            </MatTabGroup>
        </div>
    }
</div>

@code {
    ContenidoSolicitudExpedienteNotario contenido = new ContenidoSolicitudExpedienteNotario();
    private Notario notario;
    [Parameter] public DocumentoDTO documento { get; set; }
    private bool firstLoad = true;

    protected override async Task OnInitializedAsync()
    {
        firstLoad = true;
        contenido = JsonConvert.DeserializeObject<ContenidoSolicitudExpedienteNotario>(documento.contenido.ToString());
        notario = new Notario();
        await getNotario();
        ;
        StateHasChanged();
        firstLoad = false;
    }
    private async Task getNotario()
    {
        var responseHttp = await repository.Get<Notario>($"api/notarios/id?id={contenido.idnotario}");
        notario = responseHttp.Response;

    }



}
