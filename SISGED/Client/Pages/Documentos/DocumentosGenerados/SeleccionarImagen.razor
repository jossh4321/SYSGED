@using System.IO
@using Blazor.FileReader
@inject IFileReaderService fileReaderService
    
<style>
        .inputfile {
            width: 100%;
            height: 0.1px;
            opacity: 0;
            overflow: hidden;
            position: absolute;
            z-index: -1;
        }

        .not-selected {
            display: block;
            background: #ff3333;
            border: 2px solid black;
            border-radius: 4px;
            margin: 10px;
        }

        .selected {
            display: block;
            background: #00b33c;
            border: 2px solid black;
            border-radius: 4px;
            margin: 10px;
        }
</style>

<input type="file" name="file" id="file" class="inputfile" @ref="inputElement" @onchange=" setImagen" accept=".jpg,.jpeg,.png" />
<label class="@estilo" for="file">@estado</label>

@code {
    [Parameter] public EventCallback<string> imagenSeleccionada{ get; set;}
    ElementReference inputElement;
    private string imagenBase64;
    public string estado = "Seleccione la imagen de su firma";
    public string estilo = "not-selected";

    private async Task setImagen()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream ms = await file.CreateMemoryStreamAsync( 4 * 1024))
            {
                var bytesImage = new byte[ms.Length];
                ms.Read(bytesImage, 0, (int)ms.Length);
                imagenBase64 = Convert.ToBase64String(bytesImage);
                estilo = imagenBase64 != null ? "selected" : "not-selected";
                estado = imagenBase64 != null ? "Imagen seleccionada" : "Seleccione un Archivo";
                await imagenSeleccionada.InvokeAsync(imagenBase64);
            }
        }
    }
}