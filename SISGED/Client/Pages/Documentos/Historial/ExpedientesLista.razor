    <style >
    body {        
        display: flex;
        justify-content: space-around;
        align-items: center;
        flex-wrap: wrap;
        height: 100vh;
        font-family: "Open Sans";
    }

    .expediente {
        --bg-color: #6200ee;
        --bg-color-light: #6500FF;
        --text-color-hover: #ffffff;        
    }

    .card {
        width: 250px !important; 
        height: 371px !important;
        background: #fff;
        border-radius: 10px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
        box-shadow: 0 14px 26px rgba(0, 0, 0, 0.04);
        transition: all 0.3s ease-out;
        text-decoration: none;
    }

    .card:hover {
        transform: translateY(-5px) scale(1.005) translateZ(0);       
    }

    .card:hover .overlay {
        transform: scale(6) translateZ(0);
    }

    .card:hover .circle {
        border-color: var(--bg-color-light);
        background: var(--bg-color);
    }

    .card:hover .circle:after {
        background: var(--bg-color-light);
    }

    .card:hover p {
        color: var(--text-color-hover);
    }

    .card:hover .btn {
        background-color: var(--text-color-hover);
        color: #4C5656;
    }

    p {
        text-align: center;
        margin-top: 0;
        margin-bottom: 0;
    }

    .card:active {
        transform: scale(1) translateZ(0);
        box-shadow: 0 15px 24px rgba(0, 0, 0, 0.11), 0 15px 24px var(--box-shadow-color);
    }

    .card p {
        font-size: 16px;
        color: #4C5656;        
        z-index: 50;
        transition: color 0.3s ease-out;
    }

    .circle {
        width: 131px;
        height: 131px;
        border-radius: 50%;
        background: #fff;
        /*border: 2px solid var(--bg-color);*/
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        z-index: 1;
        transition: all 0.3s ease-out;
        margin-bottom: 10px;
    }

    .circle:after {
        content: "";
        width: 118px;
        height: 118px;
        display: block;
        position: absolute;
        background: var(--bg-color);
        border-radius: 50%;
        top: 7px;
        left: 7px;
        transition: opacity 0.3s ease-out;
    }

    .circle img {
        z-index: 1000;
        transform: translateZ(0);
    }

    .overlay {
        width: 110px;
        position: absolute;
        height: 90px;
        border-radius: 50%;
        background: var(--bg-color);
        top: 48px;
        left: 76px;
        z-index: 0;
        transition: transform 0.3s ease-out;
    }

    .btn {
        position: relative;
        margin-top: 10px;
        padding: 10px 32px;
        font-weight: 400;
        font-size: 16px;
        line-height: 1;
        color: white;
        background: var(--bg-color);
        border: none;
        outline: none;
        border-radius: 15px;
        overflow: hidden;
        cursor: pointer;
    }
</style>

<link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
<div class="card expediente">
    <div class="overlay"></div>
    <div class="circle">
        <img src="https://image.flaticon.com/icons/png/512/2179/2179512.png" height="76" width="71">
    </div>
    <p>@expediente.tipo</p>
    <p>Estado: @expediente.estado</p>
    <p>@expediente.cliente.nombre - @expediente.cliente.tipodocumento : @expediente.cliente.numerodocumento</p>
    <button @onclick="(() => listarDocumentos.InvokeAsync(expediente))" class="btn">Documentos</button>
    <button @onclick="(() => listarDerivaciones.InvokeAsync(expediente.derivaciones))" class="btn">Derivaciones</button>
</div>

@code {
    [Parameter]
    public ExpedienteDTO2 expediente { get; set; }
    [Parameter]
    public EventCallback<ExpedienteDTO2> listarDocumentos { get; set; }
    [Parameter]
    public EventCallback<List<Derivacion>> listarDerivaciones { get; set; }
}
