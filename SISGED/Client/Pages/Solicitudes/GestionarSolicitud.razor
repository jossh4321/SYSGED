@page "/gestionarsolicitud"
@inject IRepository repository
@layout MainLayout
@inject NavigationManager navigationManager

<style>
    .mdc-dialog .mdc-dialog__surface {
        width: 800px;
    }

    .mdc-paginator-container {
        color: white;
    }

    th {
        text-align: center;
        text-emphasis: filled;
    }

    td {
        text-align: center;
    }
</style>

<div style="width:1050px;position:fixed;">
    <MatButton OnClick="@OpenDialogRegistrar" Unelevated="true">Registrar Solicitud</MatButton>
    <MatTable style="background-color:aliceblue;color:darkslateblue;border-radius:40px;text-align:center" Items="docs" class="mat-elevation-z5">
        <MatTableHeader>
            <th>id</th>
            <th>Tipo de Protocolo Notarial</th>
            <th>Estado</th>
            <th>Funciones</th>
        </MatTableHeader>
        <MatTableRow>
            @if (@context.tipo == "SolicitudBPN")
            {
                tipo_front = "Busqueda de Protocolo Notarial";
            }
            @if (@context.tipo == "SolicitudExpedicionFirma")
            {
                tipo_front = "Expedicion de Firma";
            }
            @if (@context.tipo == "SolicitudDenuncia")
            {
                tipo_front = "Denuncia";
            }
            <td>@context.id</td>
            <td bind="@TipoSolicitud2">@tipo_front</td>
            <td>@context.estado</td>
            <td>
                @if (context.estado == "revisado" || context.estado == "cancelado" || context.estado == "finalizado")
                {
                    activator = true;
                }
                else
                {
                    activator = false;
                }
                <MatButton Icon="@MatIconNames.Description" OnClick="@OpenDialogVerDetalles">Ver Detalles</MatButton>
                <MatButton Icon="@MatIconNames.Build" Disabled="@activator" OnClick="@OpenDialogModificar">Modificar</MatButton>
                <MatButton Icon="@MatIconNames.Cancel_presentation" Disabled="@activator" OnClick="@OpenDialogCancelar">Cancelar</MatButton>
            </td>



        </MatTableRow>
    </MatTable>
</div>



<MatDialog @bind-IsOpen="@dialogIsOpen_Registrar">
    @if (TipoSolicitud == "Solic_ExpedicionFirma")
    {
        <MatDialogTitle>Registrar Solicitud de Expedicion de Firma</MatDialogTitle>
        <MatDialogContent>
            <RegistrarSolicExpedicionF />
        </MatDialogContent>
    }
    @if (TipoSolicitud == "Solic_Denuncia")
    {
        <MatDialogTitle>Registrar Solicitud de Denuncia</MatDialogTitle>
        <MatDialogContent>
            <RegistrarSolicDenuncias />
        </MatDialogContent>
    }
    @if (TipoSolicitud == "Solic_BPN")
    {
        <MatDialogTitle>Registrar Solicitud de BPN</MatDialogTitle>
        <MatDialogContent>
            <RegistrarSolicBPN />
        </MatDialogContent>
    }

    <MatDialogActions>
        <MatButton OnClick="@OkClick">Cancelar</MatButton>
    </MatDialogActions>
</MatDialog>








<MatDialog @bind-IsOpen="@dialogIsOpen_Modificar">
    <MatDialogTitle>Modificar Solicitud</MatDialogTitle>
    @if (TipoSolicitud2 == "Expedicion de Firma")
    {
        <MatDialogContent>
            <RegistrarSolicExpedicionF />
        </MatDialogContent>
    }
    @if (TipoSolicitud2 == "Denuncia")
    {
        <MatDialogContent>
            <RegistrarSolicDenuncias />
        </MatDialogContent>
    }
    @if (TipoSolicitud2 == "Busqueda de Protocolo Notarial")
    {
        <MatDialogContent>
            <RegistrarSolicBPN />
        </MatDialogContent>
    }

    <MatDialogActions>
        <MatButton OnClick="@OkClick">Cancelar</MatButton>
    </MatDialogActions>
</MatDialog>

<MatDialog @bind-IsOpen="@dialogIsOpen_VerDetalles">
    <MatDialogTitle>Detalles de la Solicitud</MatDialogTitle>
    @if (TipoSolicitud2 == "Expedicion de Firma")
    {
        <MatDialogContent>
            <RegistrarSolicExpedicionF />
        </MatDialogContent>
    }
    @if (TipoSolicitud2 == "Denuncia")
    {
        <MatDialogContent>
            <RegistrarSolicDenuncias />
        </MatDialogContent>
    }
    @if (TipoSolicitud2 == "Busqueda de Protocolo Notarial")
    {
        <MatDialogContent>
            <RegistrarSolicBPN />
        </MatDialogContent>
    }
    <MatDialogActions>
        <MatButton OnClick="@OkClick">Cancelar</MatButton>
    </MatDialogActions>
</MatDialog>
<MatDialog @bind-IsOpen="@dialogPrincipal">
    <MatDialogTitle>Elegir Tipo de Solicitud</MatDialogTitle>
    <MatDialogContent>
        <p>
            <MatSelect Label="" @bind-Value="@TipoSolicitud">
                <MatOptionString Value="nulo"></MatOptionString>
                <MatOptionString Value="Solic_ExpedicionFirma">Expedicion de Firmas</MatOptionString>
                <MatOptionString Value="Solic_Denuncia">Denuncia</MatOptionString>
                <MatOptionString Value="Solic_BPN">Busqueda de Protocolo Notarial</MatOptionString>
            </MatSelect>
        </p>
    </MatDialogContent>
    <MatDialogActions>
        @if (TipoSolicitud == "Solic_ExpedicionFirma" || TipoSolicitud == "Solic_Denuncia" || TipoSolicitud == "Solic_BPN")
        {
            <MatButton OnClick="@OkEleccionSolic">OK</MatButton>
        }
        <MatButton OnClick="@CancelButton">Cerrar</MatButton>
    </MatDialogActions>
</MatDialog>









@code {

    string TipoSolicitud;
    string TipoSolicitud2;
    string tipo_front;
    bool activator;

    bool dialogPrincipal = false;

    bool dialogIsOpen_Registrar = false;

    bool dialogIsOpen_Modificar = false;
    bool dialogIsOpen_VerDetalles = false;
    bool dialogIsOpen_Cancelar = false;

    bool Registrar_SolicDenuncia = false;
    bool Registrar_SolicBPN = false;
    bool Registrar_SolicEF = false;
    [CascadingParameter]
    MainLayout layout { get; set; }
    [CascadingParameter(Name = "SesionUsuario")] protected Sesion sesion { get; set; }


    List<Documento> docs { get; set; } = new List<Documento>();

    protected override async Task OnInitializedAsync()
    {

        var httpResponse = await repository.Get<List<Documento>>("api/documentos/documentosolicitudes");
        if (!httpResponse.Error)
        {
            Documento docActivator = new Documento();
            docs = httpResponse.Response;
            if (docActivator.estado == "revisado")
            {
                activator = true;
            }
            else{
                activator = false;
            }


        }
        else
        {
            Console.WriteLine("Ocurrio un error");
        }




    }

    void CancelButton()
    {
        dialogPrincipal = !dialogPrincipal;

        Registrar_SolicDenuncia = false;
        Registrar_SolicBPN = false;
        Registrar_SolicEF = false;
    }

    void OkEleccionSolic()
    {
        if (dialogPrincipal)
        {

            dialogIsOpen_Registrar = true;
            if (TipoSolicitud == "Solic_ExpedicionFirma")
            {
                Registrar_SolicEF = true;
            }
            else if (TipoSolicitud == "Solic_Denuncia")
            {
                Registrar_SolicDenuncia = true;
            }
            else if (TipoSolicitud == "Solic_BPN")
            {
                Registrar_SolicBPN = true;
            }
            dialogPrincipal = false;

        }

    }

    void OpenDialogRegistrar()
    {
        dialogPrincipal = true;
        //dialogIsOpen_Registrar = true;
        //navigationManager.NavigateTo("solicitud/crear");
    }
    void OpenDialogModificar()
    {
        dialogIsOpen_Modificar = true;
        
        ExpedienteBandejaDTO expedienteEjemplo = new ExpedienteBandejaDTO();
        expedienteEjemplo.tipo = "EjemploExpediente";
        expedienteEjemplo.cliente = new Cliente()
        {
            nombre = "usuario ejemplo",
            tipodocumento = "DNI",
            numerodocumento = "123456789"
        };
        layout.Send("sebastian", expedienteEjemplo);
        //navigationManager.NavigateTo("solicitud/crear");
    }
    void OpenDialogVerDetalles()
    {  
        dialogIsOpen_VerDetalles = true;
        //navigationManager.NavigateTo("solicitud/crear");
    }
    void OpenDialogCancelar()
    {
        dialogIsOpen_Cancelar = true;
        //navigationManager.NavigateTo("solicitud/crear");
    }

    void OkClick()
    {
        dialogIsOpen_Registrar = false;

        dialogIsOpen_Modificar = false;
        dialogIsOpen_VerDetalles = false;
        dialogIsOpen_Cancelar = false;


        TipoSolicitud = "nulo";
    }
    
}
