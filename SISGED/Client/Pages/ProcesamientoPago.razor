@page "/procesamientopago"
@inject IRepository repository
@inject NavigationManager navigationManager
@using SISGED.Shared.Helpers
@using SISGED.Shared.Models
@using Microsoft.AspNetCore.WebUtilities

<link rel="stylesheet" href="css/processing.css" />

@if (firstLoad)
{
    <div id="preloader" style="display:" block">
        <div id="loader"></div>
    </div>
}
else
{
    <table border="0" cellpadding="0" cellspacing="0" width="100%">

        <tr>
            <td align="center">
                <table border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width: 600px;">
                    <tr>
                        <td align="center" valign="top" style="padding: 36px 24px;">
                            <a href="#" target="_blank" style="display: inline-block;">
                                <img src="https://colegionotariosancash.com/wp-content/uploads/logo.png" alt="Logo" border="0" height="104" width="360" style="display: block; width: 360px; max-width: 360px; min-width: 240px;">
                            </a>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td align="center">
                <table border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width: 600px;">
                    <tr>
                        <td align="left" bgcolor="black" style="padding: 36px 24px 0; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; border-top: 3px solid #d4dadf; text-align:center">
                            <h1 style="margin: 0; font-size: 32px; font-weight: 700; letter-spacing: -1px; line-height: 48px;">Estado de Transacción</h1>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td align="center">
                <table border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width: 600px;">
                    <tr>
                        <td align="left" bgcolor="black" style="padding: 24px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 16px; line-height: 24px;">
                            <p>Estimado Usuario:</p>
                            <p style="margin: 0;">
                                Le notificamos que el procesamiento de su transacción ha sido @(estado_retornado.ToUpper()).
                            </p>
                            <p>
                                <ApprovedDeniedSample tipo="@estado_retornado" />
                            </p>
                            <p style="font-weight:bolder">Detalle:</p>
                            <p>
                                <ul>
                                    <li>Tipo de Solicitud: @documento.tipo.ToUpper()</li>
                                    <li>Fecha: @DateTime.Today.ToShortDateString()</li>
                                    @* <li>Estado: @documento.estado.ToString().ToUpper()</li>*@
                                </ul>
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <td align="left" bgcolor="black">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td align="center" bgcolor="black" style="padding: 12px;">
                                        <table border="0" cellpadding="0" cellspacing="0">
                                            <tr>
                                                <td align="center" bgcolor="#1a82e2" style="border-radius: 6px;">
                                                    <button @onclick="Redireccion" style="        background-color: #1a82e2; display: inline-block;
        padding: 16px 36px;
        font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
        font-size: 16px;
        color: #ffffff;
        text-decoration: none;
        border-radius: 6px;">
                                                        Redirigirse al Solicitudes
                                                    </button>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td align="left" bgcolor="black" style="padding: 24px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 16px; line-height: 24px; border-bottom: 3px solid #d4dadf">
                            <p style="margin: 0;">Saludos,<br> Colegio de Notarios de Lima</p>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td align="center" style="padding: 24px;">
                <table border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width: 600px;">

                    <tr>
                        <td align="center" style="padding: 12px 24px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; color: #666;">
                            <p style="margin: 0;">El proceso de pago NO es parte del Colegio de Notarios de Lima, nosotros no guardamos ninguna información de método de pago.</p>
                        </td>
                    </tr>
                    <tr>
                        <td align="center" style="padding: 12px 24px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; color: #666;">

                            <p style="margin: 0;">Colegio de Notarios de Lima: Av. Gregorio Escobedo 343, Jesús María 15072, Lima, Perú</p>
                            <p style="margin: 0;">Telefono: 3190700</p>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}
@code {
    private bool firstLoad = true;
    string estado_retornado;
    DocumentoDTO documento;
    System.Uri uri;

    protected override async Task OnInitializedAsync()
    {
        firstLoad = true;
        //Paso1: Leer url
        uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        //Paso2: Try leer estado
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("collection_status", out var estado))
        {
            estado_retornado = estado.ToString();
            //Paso3: If aprobadi, hacer logica buena
            if (estado.ToString() == "approved")
            {
                QueryHelpers.ParseQuery(uri.Query).TryGetValue("external_reference", out var referencia);
                QueryHelpers.ParseQuery(uri.Query).TryGetValue("payment_type", out var payment_type);
                MercadoPagoResponse mercadoPago = new MercadoPagoResponse
                {
                    estado = estado.ToString(),
                    referencia = referencia.ToString(),
                    tipopago = payment_type.ToString()
                };
                DocumentoDTO solicitud = new DocumentoDTO();
                //Paso4: Obtener el documento solicitud
                var httpResponse = await repository.Get<DocumentoDTO>($"api/documentos/documentodto?iddoc={mercadoPago.referencia.Split("-")[0]}");
                if (!httpResponse.Error)
                {
                    solicitud = (DocumentoDTO)httpResponse.Response;
                    solicitud.estado = SolicitudEstado.Finalizado.Value;

                    //UltimoPaso: Actualizar Estado Solicitud
                    var httpResponse1 = await repository.Put<DocumentoDTO, DocumentoDTO>("api/documentos/cambiarestadodocumento", solicitud);
                    documento = (DocumentoDTO)httpResponse1.Response;
                }
                else
                {
                    Console.WriteLine("Algo Mal");
                }
                DocumentoDTO resultado = new DocumentoDTO();
                //Paso5: Obtener el documento resultado
                var httpResponse2 = await repository.Get<DocumentoDTO>($"api/documentos/documentodto?iddoc={mercadoPago.referencia.Split("-")[1]}");
                if (!httpResponse2.Error)
                {
                    resultado = (DocumentoDTO)httpResponse2.Response;
                    resultado.estado = SolicitudEstado.Finalizado.Value;
                    //UltimoPaso: Actualizar Estado Resultado
                    var httpResponse3 = await repository.Put<DocumentoDTO, DocumentoDTO>("api/documentos/cambiarestadodocumento", resultado);
                }
                else
                {
                    Console.WriteLine("Algo Mal");
                }
            }
        }
        else
        {
            //Rechazado papi
        }
        firstLoad = false;
    }

    public void Redireccion()
    {
        navigationManager.NavigateTo("/gestionarsolicitud");
    }
}